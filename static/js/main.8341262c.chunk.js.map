{"version":3,"sources":["assets/blmtest.py","assets/HTH.png","components/python/pDownload.js","components/python/file.js","components/python/index.js","components/online/useInterval.js","components/online/running.js","components/online/index.js","components/info/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","link","textAlign","PDownload","props","classes","Grid","container","className","resp","direction","spacing","item","xs","Typography","Link","href","alt","File","autoplay","download","tite","fontSize","fontWeight","Python","justify","alignItems","Counter","useState","count","setCount","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","window","open","rootElement","document","getElementById","ReactDOM","render","psst","Running","Button","variant","onClick","console","log","Online","links","desc","paddingLeft","head","Info","list","textDecoration","listStyleType","color","main","padding","marginTop","marginBottom","marginLeft","marginRight","width","text","text2","image","height","paddingTop","App","alignContent","src","HTH","Paper","elevation","ButtonGroup","to","path","Home","justiyf","Boolean","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8341262c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blmtest.4ccd0c8a.py\";","module.exports = __webpack_public_path__ + \"static/media/HTH.30f928da.png\";","import React from \"react\";\nimport { Grid, Link, Typography } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textAlign: \"center\",\n  },\n}));\n\nexport default function PDownload(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.resp} direction=\"column\" spacing={1}>\n      <Grid item xs>\n        <Typography>\n          If you don't know Python, then you'll need to download it as well as\n          the Python Launcher, link below.\n        </Typography>\n      </Grid>\n      <Grid item xs className={classes.link}>\n        <Link\n          href=\"https://www.python.org/downloads/\"\n          alt=\"python download website\"\n        >\n          Python Download\n        </Link>\n      </Grid>\n      <Grid item xs>\n        <Typography>\n          Python is super simple and the website makes it easy to understand how\n          to download and get started.\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\n\nimport { Grid, Typography, Link } from \"@material-ui/core\";\nimport autoplay from \"../../assets/blmtest.py\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textAlign: \"center\",\n  },\n}));\n\nexport default function File(props) {\n  const classes = useStyles();\n  return (\n    <Grid container spacing={1} direction=\"column\" xs={12}>\n      <Grid item xs={12}>\n        <Typography>\n          For those that know how to use a command line interface, just download\n          the file below.\n        </Typography>\n      </Grid>\n      <Grid item xs className={classes.link}>\n        <Link href={autoplay} download=\"blmautoplay.py\" alt=\"blm autoplay file\">\n          Autoplay File Download\n        </Link>\n      </Grid>\n      <Grid item xs>\n        <Typography>\n          You can run it through the cli be moving to the directory where it's\n          located and using the \"python\" command.\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\n\nimport { Grid, Typography } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport PDownload from \"./pDownload\";\nimport File from \"./file\";\n\nconst useStyles = makeStyles((theme) => ({\n  tite: {\n    fontSize: \"1.2em\",\n    fontWeight: \"bold\",\n  },\n}));\n\nexport default function Python(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      direction=\"column\"\n      xs={12}\n    >\n      <Grid>\n        <Typography className={classes.tite}> Python</Typography>\n      </Grid>\n      <Grid>\n        <PDownload />\n        <File />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nexport default function Counter() {\n  const [count, setCount] = useState(1);\n\n  useInterval(() => {\n    window.open(\"https://youtu.be/bCgLa25fDHM\");\n\n    setCount(count + 1);\n  }, 12000000);\n\n  return <h1>played {count} time(s)</h1>;\n}\n\nfunction useInterval(callback, delay) {\n  //useRef to setup a mutable object to track the amount of time played\n  const savedCallback = useRef();\n\n  // useEffect to track callback/times played\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // useEffect to set current interval\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Counter />, rootElement);\n","import React, { useState } from \"react\";\nimport Counter from \"./useInterval\";\nimport { Grid, Button, Typography } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  psst: {\n    fontSize: \".7em\",\n  },\n  tite: {\n    fontSize: \"1.2em\",\n    fontWeight: \"bold\",\n  },\n}));\n\nexport default function Running(props) {\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n\n  const firstRun = () => {\n    setCount(count + 1);\n    console.log(count);\n    window.open(\"https://youtu.be/bCgLa25fDHM\");\n  };\n\n  const runningScript = () => {\n    if (count % 2 === 0) {\n      return <div>click button to start</div>;\n    } else {\n      return (\n        <div>\n          <Counter />\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={3}\n      direction=\"column\"\n    >\n      <Grid item xs>\n        <Typography className={classes.tite}>Online Version</Typography>\n      </Grid>\n      <Grid item xs>\n        <Typography>\n          This version runs after you click the button. A new window will open\n          (usually caught as a popup) with the video playing every two hours.\n          Also apparently if you just spam one video youtube will flag you as\n          spam. Shocking, I know. To combat that just play a different video\n          every now and then. Sorry it's not fully automated.\n        </Typography>\n      </Grid>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n        spacing={3}\n      >\n        <Grid item xs>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              firstRun();\n            }}\n          >\n            Watch\n          </Button>\n        </Grid>\n        <Grid item xs>\n          {runningScript()}\n        </Grid>\n      </Grid>\n      <Grid item xs>\n        <Typography className={classes.psst}>\n          **still working on this, so for now hit the button below and then the\n          autoplay function will work.\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Running from \"./running\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function Online(props) {\n  return (\n    <Grid container>\n      <Running />\n    </Grid>\n  );\n}\n","import React from \"react\";\n\nimport { Grid, Link, Typography } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  links: {\n    fontSize: \"1.2em\",\n  },\n  desc: {\n    paddingLeft: 10,\n  },\n  head: {\n    fontWeight: \"bold\",\n    fontSize: \"1.4em\",\n  },\n}));\n\nexport default function Info(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography className={classes.head}>\n          helpful links to sites that are way more important\n        </Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <Link\n          className={classes.links}\n          href=\"https://blacklivesmatter.carrd.co/\"\n          alt=\"black lives matter aggregate\"\n        >\n          blacklivesmatter.card.co\n        </Link>\n      </Grid>\n      <Grid item xs={8}>\n        <Link\n          className={classes.links}\n          href=\"https://docs.google.com/document/u/0/d/1S5uckFHCA_XZkxG0Zg5U4GQGbY_RklZARwu43fqJH0E/mobilebasic\"\n          alt=\"anti-racism resource list\"\n        >\n          Anti-Racism Resource List\n        </Link>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Python from \"./components/python\";\nimport Online from \"./components/online\";\nimport Info from \"./components/info\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HTH from \"./assets/HTH.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    textDecoration: \"none\",\n    listStyleType: \"none\",\n    color: \"#000000\",\n  },\n  main: {\n    padding: 40,\n    marginTop: 20,\n    marginBottom: 20,\n    marginLeft: 40,\n    marginRight: 40,\n    width: \"fit-content\",\n  },\n  text: {\n    fontSize: \"1.05em\",\n  },\n  text2: {\n    fontSize: \"1.2em\",\n    fontWeight: \"bold\",\n  },\n  image: {\n    height: 150,\n    paddingTop: 20,\n    marginBottom: -20,\n  },\n  psst: {\n    fontSize: \".7em\",\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <Router>\n      <Grid container justify=\"center\" alignContent=\"center\">\n        <Grid container justify=\"center\" alignContent=\"center\">\n          <a href=\"https://www.hope-this-helps.info/\" alt=\"hth\">\n            <img className={classes.image} src={HTH} alt=\"Hope This Helps\" />\n          </a>\n        </Grid>\n        <Paper className={classes.main} elevation={10}>\n          <Grid container justify=\"center\">\n            <ButtonGroup>\n              <Button variant=\"contained\">\n                <Link className={classes.list} to=\"/\">\n                  About\n                </Link>\n              </Button>\n              <Button variant=\"contained\">\n                <Link className={classes.list} to=\"/python\">\n                  Python Version\n                </Link>\n              </Button>\n              <Button variant=\"contained\">\n                <Link className={classes.list} to=\"/online\">\n                  Online Version\n                </Link>\n              </Button>\n            </ButtonGroup>\n          </Grid>\n        </Paper>\n        <Paper className={classes.main} elevation={10}>\n          <Switch>\n            <Route path=\"/python\">\n              <Python />\n            </Route>\n            <Route path=\"/online\">\n              <Online />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Paper>\n        <Paper className={classes.main} elevation={10}>\n          <Info />\n        </Paper>\n      </Grid>\n    </Router>\n  );\n  function Home() {\n    return (\n      <Grid\n        item\n        xs={12}\n        container\n        spacing={3}\n        justiyf=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n      >\n        <Grid item xs={12}>\n          <Typography className={classes.text2}>\n            ** UPDATE - the video is now down and won't be coming back. Please\n            consider following the links below to find more information on how\n            to help. **\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography className={classes.text}>\n            Zoe Amira put together an incredible video that offers a way to\n            contribute to Black Lives Matter for those that don't have money to\n            donate. All of the ad revenue is donated to a mulititude of\n            organizations in relation to Blak Lives Matter. It's an amazing\n            video that I highly recommend you watch take the time and watch it.\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography className={classes.text}>\n            The purpose of this app and website are to help automate it. After\n            my first watch I decided to keep it playing in another tab to\n            (hopefully) continue to get served ads. After a couple times of\n            forgetting it was playing in the background and not remembering how\n            long it had been over for, I decide to make this app.\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography className={classes.text}>\n            It's fairly simple, and there are two versions: one in browser and\n            one Python file. The in browser option will open a new tab (popup)\n            with the video every two hours. The Python version runs a script\n            locally that does the same thing.\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography className={classes.psst}>\n            ** note - I'm definitely not the best programmer in any of these\n            languages, this was just something I wanted to put together and ship\n            fast so that other people could use it if they wanted. If you have\n            comments, concerns, questions, tips, etc. please email -{\" \"}\n            <Link\n              href=\"hopethishelpsinfo@gmail.com\"\n              alt=\"hopethishelpsinfo@gmail.com\"\n            >\n              hopethishelpsinfo@gmail.com\n            </Link>\n            **\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}